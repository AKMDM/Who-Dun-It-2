///////////////////////////////////////////////////////////////////////////////
//
// Who Dun It Source Code
// Copyright (C) 2010-2017 by Who Dun It Development Team
// All rights reserved.
//
// Permission to use, copy, modify, and distribute this software and its
// documentation for any purpose and without fee is hereby granted,
// provided that the above copyright notice appear in all copies and that
// both that copyright notice and this permission notice appear in
// supporting documentation.
//
// THE AUTHOR PROVIDES THIS SOFTWARE ''AS IS'' AND ANY EXPRESSED OR
// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// Filename: wdi_vote.bcs
//
// Description:
//
///////////////////////////////////////////////////////////////////////////////

#include "wdi_vote.h"

///////////////////////////////////////////////////////////////////////////////
//  Variables
///////////////////////////////////////////////////////////////////////////////

int g_iVoteState;
int g_nVoteMapEntries;

int	g_iVoteCountdownTics;
int g_iVotePassedTics;

bool g_bRefreshAllowed;
bool g_bReplayAllowed;

///////////////////////////////////////////////////////////////////////////////
//  Functions
///////////////////////////////////////////////////////////////////////////////

void WDI_UpdateVoteList(void)
{
	str sVoteMaplist = GetCVarString("wdi_vote_maplist");
}

///////////////////////////////////////////////////////////////////////////////

void WDI_UpdateVoteBlacklist(void)
{
	str sVoteMapBlacklist = GetCVarString("wdi_vote_blacklist");
}

///////////////////////////////////////////////////////////////////////////////

void WDI_SelectVoteEntries(void)
{
}

///////////////////////////////////////////////////////////////////////////////
//  Scripts
///////////////////////////////////////////////////////////////////////////////

Script "WDI_StartVote" (void)
{
	g_iVoteCountdownTics = GetCVar("wdi_vote_time") * TICRATE;
	g_iVotePassedTics = VOTE_PASSED_TIME * TICRATE;
	
	g_iVoteState = VOTESTATE_INPROGRESS;
	
	while(g_iVoteCountdownTics > 0)
	{
	
		g_iVoteCountdownTics--;
		
		Delay(1);
	}
}

///////////////////////////////////////////////////////////////////////////////

Script "WDI_EndVote" (void)
{
	g_iVoteState = VOTESTATE_VOTEOVER;
}